
// 256x32
module Lab5 (
	 clk,
    rst,
    read_rq,
    write_rq,
    rw_address,
    write_data,
    read_data
); 
input clk;
input rst;
input read_rq;
input write_rq;
input[5:0] rw_address;
input[7:0] write_data;
output[7:0] read_data;
reg[7:0] read_data;
integer out, i;

reg [31:0] memory_ram_d [255:0];
reg [31:0] memory_ram_q [255:0];


always @(posedge clk or negedge rst)
begin
    if (!rst)
    begin
        for (i=0; i<256; i=i+1)
            memory_ram_q[i] <= 0;
    end
    else
    begin
        for (i=0; i<256; i=i+1)
             memory_ram_q[i] <= memory_ram_d[i];
    end
end


always @(*)
begin
    for (i=0; i<256; i=i+1)
        memory_ram_d[i] = memory_ram_q[i];
    if (write_rq && !read_rq)
        memory_ram_d[rw_address] = write_data;
    if (!write_rq && read_rq)
        read_data = memory_ram_q[rw_address];
end

endmodule
